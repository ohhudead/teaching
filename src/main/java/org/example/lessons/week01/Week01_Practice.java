package org.example.lessons.week01;

/**
 * üèÜ –ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ù–Ø–¢–ò–ï: –ü–ï–†–í–ê–Ø –ù–ï–î–ï–õ–Ø
 * 
 * –≠—Ç–æ –∑–∞–Ω—è—Ç–∏–µ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –∑–Ω–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π –Ω–µ–¥–µ–ª–∏ –≤ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á–∞—Ö.
 * –ó–¥–µ—Å—å —Ç—ã –ø—Ä–∏–º–µ–Ω–∏—à—å JVM, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö.
 * 
 * üí° –¶–µ–ª—å: –ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å –æ—Å–Ω–æ–≤—ã –∏ –≥–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é!
 */
public class Week01_Practice {
    
    public static void main(String[] args) {
        System.out.println("üèÜ –ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ù–Ø–¢–ò–ï: –ù–ï–î–ï–õ–Ø 1");
        System.out.println("=".repeat(50));
        
        // üéØ –ó–ê–î–ê–ß–ê 1: –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        personalInfoChallenge();
        
        // üéØ –ó–ê–î–ê–ß–ê 2: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
        calculatorChallenge();
        
        // üéØ –ü–†–û–ï–ö–¢–´
        project1_PersonalInfoApp();
        project2_SimpleCalculator();
        project3_GradeAnalyzer();
        project4_TimeConverter();
        
        // üìä –ú–∏–Ω–∏-—Ç–µ—Å—Ç
        miniQuiz();
        
        System.out.println("\nüéâ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –≥–æ—Ç–æ–≤ –∫ –Ω–µ–¥–µ–ª–µ 2!");
    }
    
    /**
     * üéØ –ó–ê–î–ê–ß–ê 1: –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
     */
    private static void personalInfoChallenge() {
        System.out.println("\nüéØ –ó–ê–î–ê–ß–ê 1: –°–æ–∑–¥–∞–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        
        // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∏ –∑–∞–ø–æ–ª–Ω–∏:
        /*
        String name = "–¢–≤–æ–µ –∏–º—è";
        int age = 20;
        double height = 1.75;
        boolean isStudent = true;
        
        System.out.println("–ò–º—è: " + name);
        System.out.println("–í–æ–∑—Ä–∞—Å—Ç: " + age);
        System.out.println("–†–æ—Å—Ç: " + height + " –º");
        System.out.println("–°—Ç—É–¥–µ–Ω—Ç: " + (isStudent ? "–î–∞" : "–ù–µ—Ç"));
        */
    }
    
    /**
     * üéØ –ó–ê–î–ê–ß–ê 2: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
     */
    private static void calculatorChallenge() {
        System.out.println("\nüéØ –ó–ê–î–ê–ß–ê 2: –ü—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä");
        
        // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∏ –ø–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π:
        /*
        int a = 15;
        int b = 4;
        
        System.out.println(a + " + " + b + " = " + (a + b));
        System.out.println(a + " - " + b + " = " + (a - b));
        System.out.println(a + " * " + b + " = " + (a * b));
        System.out.println(a + " / " + b + " = " + (a / b));
        System.out.println(a + " % " + b + " = " + (a % b));
        */
    }
    
    /**
     * üéØ –ü–†–û–ï–ö–¢ 1: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
     * 
     * –°–æ–∑–¥–∞–π –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–±–∏—Ä–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
     * –ò—Å–ø–æ–ª—å–∑—É–π –≤—Å–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã.
     */
    private static void project1_PersonalInfoApp() {
        System.out.println("\nüéØ –ü–†–û–ï–ö–¢ 1: –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è");
        System.out.println("-".repeat(30));
        
        // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∏ –∑–∞–ø–æ–ª–Ω–∏ —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:
        
        /*
        // –õ–ò–ß–ù–´–ï –î–ê–ù–ù–´–ï
        final String FULL_NAME = "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤";
        final int BIRTH_YEAR = 2000;
        final double HEIGHT = 1.75; // –≤ –º–µ—Ç—Ä–∞—Ö
        final double WEIGHT = 70.0; // –≤ –∫–≥
        final char GENDER = '–ú'; // –ú –∏–ª–∏ –ñ
        final boolean IS_STUDENT = true;
        
        // –í–´–ß–ò–°–õ–ï–ù–ò–Ø
        int currentYear = 2024;
        int age = currentYear - BIRTH_YEAR;
        double bmi = WEIGHT / (HEIGHT * HEIGHT);
        
        // –ê–ù–ê–õ–ò–ó –ò–ú–¢
        String bmiCategory;
        if (bmi < 18.5) {
            bmiCategory = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –≤–µ—Å";
        } else if (bmi < 25.0) {
            bmiCategory = "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å";
        } else if (bmi < 30.0) {
            bmiCategory = "–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å";
        } else {
            bmiCategory = "–û–∂–∏—Ä–µ–Ω–∏–µ";
        }
        
        // –í–û–ó–†–ê–°–¢–ù–ê–Ø –ö–ê–¢–ï–ì–û–†–ò–Ø
        String ageCategory = age < 18 ? "–ù–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π" :
                            age < 65 ? "–í–∑—Ä–æ—Å–ª—ã–π" : "–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä";
        
        // –í–´–í–û–î –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
        System.out.println("=== –õ–ò–ß–ù–´–ô –ü–†–û–§–ò–õ–¨ ===");
        System.out.println("–§–ò–û: " + FULL_NAME);
        System.out.println("–í–æ–∑—Ä–∞—Å—Ç: " + age + " –ª–µ—Ç (" + ageCategory + ")");
        System.out.println("–ü–æ–ª: " + GENDER);
        System.out.println("–†–æ—Å—Ç: " + HEIGHT + " –º");
        System.out.println("–í–µ—Å: " + WEIGHT + " –∫–≥");
        System.out.printf("–ò–ú–¢: %.1f (%s)%n", bmi, bmiCategory);
        System.out.println("–°—Ç—É–¥–µ–Ω—Ç: " + (IS_STUDENT ? "–î–∞" : "–ù–µ—Ç"));
        
        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
        double idealWeight = 22.0 * HEIGHT * HEIGHT; // –ò–ú–¢ = 22 (—Å—Ä–µ–¥–Ω—è—è –Ω–æ—Ä–º–∞)
        double weightDifference = WEIGHT - idealWeight;
        
        System.out.printf("–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—Å: %.1f –∫–≥%n", idealWeight);
        if (Math.abs(weightDifference) < 2.0) {
            System.out.println("–í–µ—Å –≤ –Ω–æ—Ä–º–µ! üëç");
        } else if (weightDifference > 0) {
            System.out.printf("–õ–∏—à–Ω–∏–π –≤–µ—Å: %.1f –∫–≥%n", weightDifference);
        } else {
            System.out.printf("–ù–µ–¥–æ–±–æ—Ä –≤–µ—Å–∞: %.1f –∫–≥%n", -weightDifference);
        }
        */
    }
    
    /**
     * üéØ –ü–†–û–ï–ö–¢ 2: –ü—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
     * 
     * –°–æ–∑–¥–∞–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
     */
    private static void project2_SimpleCalculator() {
        System.out.println("\nüéØ –ü–†–û–ï–ö–¢ 2: –ü—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä");
        System.out.println("-".repeat(30));
        
        // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∏ –ø–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π:
        
        /*
        double num1 = 25.5;
        double num2 = 4.2;
        
        System.out.println("–ß–∏—Å–ª–æ 1: " + num1);
        System.out.println("–ß–∏—Å–ª–æ 2: " + num2);
        System.out.println();
        
        // –û–°–ù–û–í–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò
        System.out.println("=== –û–°–ù–û–í–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò ===");
        System.out.printf("%.2f + %.2f = %.2f%n", num1, num2, num1 + num2);
        System.out.printf("%.2f - %.2f = %.2f%n", num1, num2, num1 - num2);
        System.out.printf("%.2f √ó %.2f = %.2f%n", num1, num2, num1 * num2);
        System.out.printf("%.2f √∑ %.2f = %.2f%n", num1, num2, num1 / num2);
        System.out.printf("%.2f %% %.2f = %.2f%n", num1, num2, num1 % num2);
        
        // –ü–†–û–î–í–ò–ù–£–¢–´–ï –û–ü–ï–†–ê–¶–ò–ò
        System.out.println("\n=== –ü–†–û–î–í–ò–ù–£–¢–´–ï –û–ü–ï–†–ê–¶–ò–ò ===");
        System.out.printf("‚àö%.2f = %.2f%n", num1, Math.sqrt(num1));
        System.out.printf("%.2f¬≤ = %.2f%n", num1, Math.pow(num1, 2));
        System.out.printf("%.2f^%.2f = %.2f%n", num1, num2, Math.pow(num1, num2));
        System.out.printf("|%.2f| = %.2f%n", -num1, Math.abs(-num1));
        
        // –û–ö–†–£–ì–õ–ï–ù–ò–Ø
        System.out.println("\n=== –û–ö–†–£–ì–õ–ï–ù–ò–Ø ===");
        double result = num1 / num2;
        System.out.printf("–¢–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: %.6f%n", result);
        System.out.printf("–û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ —Ü–µ–ª–æ–≥–æ: %.0f%n", result);
        System.out.printf("–û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ 2 –∑–Ω–∞–∫–æ–≤: %.2f%n", result);
        System.out.printf("–¶–µ–ª–∞—è —á–∞—Å—Ç—å: %.0f%n", Math.floor(result));
        System.out.printf("–ö –±–æ–ª—å—à–µ–º—É —Ü–µ–ª–æ–º—É: %.0f%n", Math.ceil(result));
        
        // –°–†–ê–í–ù–ï–ù–ò–Ø
        System.out.println("\n=== –°–†–ê–í–ù–ï–ù–ò–Ø ===");
        System.out.printf("%.2f > %.2f: %b%n", num1, num2, num1 > num2);
        System.out.printf("%.2f == %.2f: %b%n", num1, num2, num1 == num2);
        System.out.printf("–ú–∞–∫—Å–∏–º—É–º: %.2f%n", Math.max(num1, num2));
        System.out.printf("–ú–∏–Ω–∏–º—É–º: %.2f%n", Math.min(num1, num2));
        */
    }
    
    /**
     * üéØ –ü–†–û–ï–ö–¢ 3: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –æ—Ü–µ–Ω–æ–∫
     * 
     * –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–π —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏.
     */
    private static void project3_GradeAnalyzer() {
        System.out.println("\nüéØ –ü–†–û–ï–ö–¢ 3: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –æ—Ü–µ–Ω–æ–∫");
        System.out.println("-".repeat(30));
        
        // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∏ –∏–∑–º–µ–Ω–∏ –æ—Ü–µ–Ω–∫–∏:
        
        /*
        // –û–¶–ï–ù–ö–ò –ü–û –ü–†–ï–î–ú–ï–¢–ê–ú (–∏–∑ 100 –±–∞–ª–ª–æ–≤)
        int mathGrade = 85;
        int physicsGrade = 92;
        int programmingGrade = 78;
        int englishGrade = 88;
        int historyGrade = 76;
        
        // –ü–û–î–°–ß–ï–¢ –°–¢–ê–¢–ò–°–¢–ò–ö–ò
        int totalSubjects = 5;
        int totalPoints = mathGrade + physicsGrade + programmingGrade + englishGrade + historyGrade;
        double averageGrade = (double) totalPoints / totalSubjects;
        
        // –ü–û–ò–°–ö –ú–ê–ö–°–ò–ú–£–ú–ê –ò –ú–ò–ù–ò–ú–£–ú–ê
        int maxGrade = Math.max(Math.max(Math.max(Math.max(mathGrade, physicsGrade), 
                                                  programmingGrade), englishGrade), historyGrade);
        int minGrade = Math.min(Math.min(Math.min(Math.min(mathGrade, physicsGrade), 
                                                  programmingGrade), englishGrade), historyGrade);
        
        // –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ë–£–ö–í–ï–ù–ù–û–ô –û–¶–ï–ù–ö–ò
        char letterGrade;
        if (averageGrade >= 90) {
            letterGrade = 'A';
        } else if (averageGrade >= 80) {
            letterGrade = 'B';
        } else if (averageGrade >= 70) {
            letterGrade = 'C';
        } else if (averageGrade >= 60) {
            letterGrade = 'D';
        } else {
            letterGrade = 'F';
        }
        
        // –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê
        String status = averageGrade >= 75 ? "–û—Ç–ª–∏—á–Ω–∏–∫" :
                       averageGrade >= 60 ? "–•–æ—Ä–æ—à–∏—Å—Ç" : "–ù—É–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å—Å—è";
        
        boolean hasExcellentGrades = maxGrade >= 90;
        boolean hasFailingGrades = minGrade < 60;
        
        // –í–´–í–û–î –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
        System.out.println("=== –ê–ö–ê–î–ï–ú–ò–ß–ï–°–ö–ò–ô –û–¢–ß–ï–¢ ===");
        System.out.println("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: " + mathGrade);
        System.out.println("–§–∏–∑–∏–∫–∞: " + physicsGrade);
        System.out.println("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ: " + programmingGrade);
        System.out.println("–ê–Ω–≥–ª–∏–π—Å–∫–∏–π: " + englishGrade);
        System.out.println("–ò—Å—Ç–æ—Ä–∏—è: " + historyGrade);
        
        System.out.println("\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===");
        System.out.println("–û–±—â–∏–π –±–∞–ª–ª: " + totalPoints);
        System.out.printf("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: %.1f%n", averageGrade);
        System.out.println("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: " + maxGrade);
        System.out.println("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: " + minGrade);
        System.out.println("–ë—É–∫–≤–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: " + letterGrade);
        System.out.println("–°—Ç–∞—Ç—É—Å: " + status);
        
        System.out.println("\n=== –ê–ù–ê–õ–ò–ó ===");
        System.out.println("–ï—Å—Ç—å –æ—Ç–ª–∏—á–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ (90+): " + (hasExcellentGrades ? "–î–∞" : "–ù–µ—Ç"));
        System.out.println("–ï—Å—Ç—å –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ (<60): " + (hasFailingGrades ? "–î–∞" : "–ù–µ—Ç"));
        
        if (averageGrade >= 85) {
            System.out.println("üèÜ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –û—Ç–ª–∏—á–Ω–∞—è —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å!");
        } else if (averageGrade >= 75) {
            System.out.println("üëç –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!");
        } else {
            System.out.println("üìö –ï—Å—Ç—å –∫ —á–µ–º—É —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è. –£–¥–∞—á–∏ –≤ —É—á–µ–±–µ!");
        }
        */
    }
    
    /**
     * üéØ –ü–†–û–ï–ö–¢ 4: –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞—Ç—ã
     * 
     * –†–∞–±–æ—Ç–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –≤—Ä–µ–º–µ–Ω–∏.
     */
    private static void project4_TimeConverter() {
        System.out.println("\nüéØ –ü–†–û–ï–ö–¢ 4: –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤—Ä–µ–º–µ–Ω–∏");
        System.out.println("-".repeat(30));
        
        // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∏ –ø–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π:
        
        /*
        // –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï
        long totalSeconds = 7384; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
        
        // –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í–†–ï–ú–ï–ù–ò
        long hours = totalSeconds / 3600;
        long minutes = (totalSeconds % 3600) / 60;
        long seconds = totalSeconds % 60;
        
        // –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í –î–ù–ò
        long totalMinutes = totalSeconds / 60;
        long totalHours = totalMinutes / 60;
        long days = totalHours / 24;
        long remainingHours = totalHours % 24;
        
        // –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ò
        String timeFormat = String.format("%02d:%02d:%02d", hours, minutes, seconds);
        
        // –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –í–†–ï–ú–ï–ù–ò –°–£–¢–û–ö
        String timeOfDay;
        if (hours >= 6 && hours < 12) {
            timeOfDay = "—É—Ç—Ä–æ";
        } else if (hours >= 12 && hours < 18) {
            timeOfDay = "–¥–µ–Ω—å";
        } else if (hours >= 18 && hours < 22) {
            timeOfDay = "–≤–µ—á–µ—Ä";
        } else {
            timeOfDay = "–Ω–æ—á—å";
        }
        
        // –†–ê–°–ß–ï–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò
        int workingHoursPerDay = 8;
        double workingDays = (double) totalHours / workingHoursPerDay;
        
        // –í–´–í–û–î –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
        System.out.println("=== –ö–û–ù–í–ï–†–¢–ï–† –í–†–ï–ú–ï–ù–ò ===");
        System.out.println("–ò—Å—Ö–æ–¥–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥: " + totalSeconds);
        System.out.println();
        
        System.out.println("=== –í–†–ï–ú–Ø ===");
        System.out.println("–ß–∞—Å—ã: " + hours);
        System.out.println("–ú–∏–Ω—É—Ç—ã: " + minutes);
        System.out.println("–°–µ–∫—É–Ω–¥—ã: " + seconds);
        System.out.println("–§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: " + timeFormat);
        System.out.println("–í—Ä–µ–º—è —Å—É—Ç–æ–∫: " + timeOfDay);
        
        System.out.println("\n=== –ë–û–õ–¨–®–ò–ï –ï–î–ò–ù–ò–¶–´ ===");
        System.out.println("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç: " + totalMinutes);
        System.out.println("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤: " + totalHours);
        System.out.println("–î–Ω–∏: " + days);
        System.out.println("–û—Å—Ç–∞–≤—à–∏–µ—Å—è —á–∞—Å—ã: " + remainingHours);
        
        System.out.println("\n=== –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –†–ê–°–ß–ï–¢–´ ===");
        System.out.printf("–†–∞–±–æ—á–∏—Ö –¥–Ω–µ–π (8—á/–¥–µ–Ω—å): %.1f%n", workingDays);
        System.out.printf("–ù–µ–¥–µ–ª—å (168—á): %.1f%n", (double) totalHours / 168);
        System.out.printf("–ú–µ—Å—è—Ü–µ–≤ (720—á): %.1f%n", (double) totalHours / 720);
        
        // –ë–û–ù–£–°: –í–æ–∑—Ä–∞—Å—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        int ageInYears = 20; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç
        long secondsInYear = 365L * 24 * 60 * 60;
        long ageInSeconds = ageInYears * secondsInYear;
        
        System.out.println("\n=== –í–û–ó–†–ê–°–¢ –í –°–ï–ö–£–ù–î–ê–• ===");
        System.out.println("–í–æ–∑—Ä–∞—Å—Ç: " + ageInYears + " –ª–µ—Ç");
        System.out.println("–≠—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–æ: " + ageInSeconds + " —Å–µ–∫—É–Ω–¥");
        System.out.printf("–ò–ª–∏ %.2e —Å–µ–∫—É–Ω–¥%n", (double) ageInSeconds);
        */
    }
    
    /**
     * üìä –ú–∏–Ω–∏-—Ç–µ—Å—Ç
     */
    private static void miniQuiz() {
        System.out.println("\nüìä –ú–ò–ù–ò-–¢–ï–°–¢");
        System.out.println("–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç: int x = 5; System.out.println(++x);");
        System.out.println("–û—Ç–≤–µ—Ç: 6 (–ø—Ä–µ—Ñ–∏–∫—Å–Ω—ã–π –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç)");
        
        System.out.println("\n–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç: 7 % 3?");
        System.out.println("–û—Ç–≤–µ—Ç: 1 (–æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è)");
        
        System.out.println("\nüéâ –û—Ç–ª–∏—á–Ω–æ! –¢—ã –≥–æ—Ç–æ–≤ –∫ –Ω–µ–¥–µ–ª–µ 2!");
    }
}

/*
üéì –ü–û–ó–î–†–ê–í–õ–Ø–Æ –° –ó–ê–í–ï–†–®–ï–ù–ò–ï–ú –ü–ï–†–í–û–ô –ù–ï–î–ï–õ–ò!

–¢—ã –∏–∑—É—á–∏–ª:
‚úÖ –û—Å–Ω–æ–≤—ã JVM –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Java –ø—Ä–æ–≥—Ä–∞–º–º—ã
‚úÖ –í—Å–µ –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
‚úÖ –†–∞–±–æ—Ç—É —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏
‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã Java
‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤

üî• –ß–¢–û –î–ê–õ–¨–®–ï?

–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ —Ç—ã –∏–∑—É—á–∏—à—å:
- –£—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (if/else/switch)
- –¶–∏–∫–ª—ã (for/while/do-while)
- –ú–∞—Å—Å–∏–≤—ã
- –ú–µ—Ç–æ–¥—ã (—Ñ—É–Ω–∫—Ü–∏–∏)

üí° –°–û–í–ï–¢–´ –î–õ–Ø –£–°–ü–ï–®–ù–û–ì–û –ò–ó–£–ß–ï–ù–ò–Ø:

1. –ü—Ä–∞–∫—Ç–∏–∫—É–π—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Ö–æ—Ç—è –±—ã 30 –º–∏–Ω—É—Ç
2. –ó–∞–ø—É—Å–∫–∞–π –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π —Å –Ω–∏–º–∏
3. –†–µ—à–∞–π –∑–∞–¥–∞—á–∏ –Ω–∞ LeetCode Easy —É—Ä–æ–≤–Ω—è
4. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö
5. –í–µ–¥–∏—Ç–µ –∫–æ–Ω—Å–ø–µ–∫—Ç—ã —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏

üõ†Ô∏è –î–û–ú–ê–®–ù–ï–ï –ó–ê–î–ê–ù–ò–ï:

1. –°–æ–∑–¥–∞–π —Å–≤–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —á–µ–≥–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ (–∫—Ä–µ–¥–∏—Ç, —Å–∫–∏–¥–∫–∏, –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç)
2. –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É "–û —Å–µ–±–µ" —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
3. –ü–æ—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤

üíæ –ù–ï –ó–ê–ë–£–î–¨:
git add .
git commit -m "–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –Ω–µ–¥–µ–ª—è 1: –û—Å–Ω–æ–≤—ã Java"
git push

–ì–æ—Ç–æ–≤ –∫ –Ω–µ–¥–µ–ª–µ 2? –£–≤–∏–¥–∏–º—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö! üöÄ
*/ 