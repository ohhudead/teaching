package org.example.lessons.week03;

/**
 * üèóÔ∏è –ó–ê–ù–Ø–¢–ò–ï 9: –ö–û–ù–°–¢–†–£–ö–¢–û–†–´
 * 
 * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã - —ç—Ç–æ "—Å—Ç—Ä–æ–∏—Ç–µ–ª–∏" –æ–±—ä–µ–∫—Ç–æ–≤. –û–Ω–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
 * –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç –µ–≥–æ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –≠—Ç–æ –≤–∞—à–∏ –ø–µ—Ä–≤—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ –≤ –û–û–ü!
 * 
 * üí° –ñ–∞—Ä–≥–æ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞:
 * - Constructor (–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä) - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
 * - Default constructor (–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) - –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
 * - Parameterized constructor (–ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä) - —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
 * - Constructor overloading (–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤) - –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
 * - this() - –≤—ã–∑–æ–≤ –¥—Ä—É–≥–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —ç—Ç–æ–≥–æ –∂–µ –∫–ª–∞—Å—Å–∞
 * - Initialization (–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è) - –∑–∞–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
 */
public class Lesson09_Constructors {
    
    public static void main(String[] args) {
        System.out.println("üèóÔ∏è –ò–ó–£–ß–ê–ï–ú –ö–û–ù–°–¢–†–£–ö–¢–û–†–´\n");
        
        learnDefaultConstructor();
        learnParameterizedConstructor();
        learnConstructorOverloading();
        learnConstructorChaining();
        practiceConstructors();
    }
    
    /**
     * üîß –ö–û–ù–°–¢–†–£–ö–¢–û–† –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ
     */
    private static void learnDefaultConstructor() {
        System.out.println("üîß –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:");
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        SimplePerson person1 = new SimplePerson();
        person1.introduce();
        
        // –ï—Å–ª–∏ –º—ã –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, Java —Å–æ–∑–¥–∞–µ—Ç –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        EmptyClass empty = new EmptyClass();
        System.out.println("–ü—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: " + empty);
        
        System.out.println();
    }
    
    private static void learnParameterizedConstructor() {
        System.out.println("‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:");
        
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ —Å—Ä–∞–∑—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
        Person person1 = new Person("–ê–Ω–Ω–∞", 25);
        Person person2 = new Person("–ò–≤–∞–Ω", 30);
        
        person1.introduce();
        person2.introduce();
        
        // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
        Car car1 = new Car("Toyota", "Camry", 2022);
        Car car2 = new Car("BMW", "X5", 2023);
        
        car1.showInfo();
        car2.showInfo();
        
        System.out.println();
    }
    
    private static void learnConstructorOverloading() {
        System.out.println("üîÑ –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤:");
        
        // –†–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        Student student1 = new Student(); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        Student student2 = new Student("–ú–∞—Ä–∏—è"); // –¢–æ–ª—å–∫–æ –∏–º—è
        Student student3 = new Student("–ê–ª–µ–∫—Å–µ–π", 20); // –ò–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç
        Student student4 = new Student("–î–∞—Ä—å—è", 19, "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"); // –í—Å–µ –¥–∞–Ω–Ω—ã–µ
        
        student1.showInfo();
        student2.showInfo();
        student3.showInfo();
        student4.showInfo();
        
        System.out.println();
    }
    
    private static void learnConstructorChaining() {
        System.out.println("üîó –¶–µ–ø–æ—á–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤:");
        
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ –¥—Ä—É–≥ –∏–∑ –¥—Ä—É–≥–∞
        BankAccount account1 = new BankAccount(); // –ë–∞–∑–æ–≤—ã–π
        BankAccount account2 = new BankAccount("–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"); // –° –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
        BankAccount account3 = new BankAccount("–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", 1000); // –° –±–∞–ª–∞–Ω—Å–æ–º
        
        account1.showAccountInfo();
        account2.showAccountInfo();
        account3.showAccountInfo();
        
        System.out.println();
    }
    
    private static void practiceConstructors() {
        System.out.println("üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏:");
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        Developer[] team = {
            new Developer("–ê–ª–µ–∫—Å–µ–π", "Senior", "Java"),
            new Developer("–ú–∞—Ä–∏—è", "Middle", "Python"),
            new Developer("–ò–≥–æ—Ä—å", "Junior", "JavaScript"),
            new Developer("–ï–ª–µ–Ω–∞") // –¢–æ–ª—å–∫–æ –∏–º—è, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        };
        
        System.out.println("üë• –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:");
        for (Developer dev : team) {
            dev.introduce();
        }
        
        // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É
        Game game = new Game("–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", 4, 60);
        game.showGameInfo();
        game.startGame();
        
        System.out.println();
    }
}

/**
 * üë§ –ü–†–û–°–¢–û–ô –ß–ï–õ–û–í–ï–ö
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
class SimplePerson {
    private String name;
    private int age;
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    public SimplePerson() {
        this.name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        this.age = 0;
        System.out.println("üÜï –°–æ–∑–¥–∞–Ω —á–µ–ª–æ–≤–µ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
    }
    
    public void introduce() {
        System.out.printf("üëã –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç %s, –º–Ω–µ %d –ª–µ—Ç%n", name, age);
    }
}

/**
 * üìù –ü–£–°–¢–û–ô –ö–õ–ê–°–°
 * Java –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
class EmptyClass {
    // –ó–¥–µ—Å—å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, –Ω–æ Java —Å–æ–∑–¥–∞—Å—Ç –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    // –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç: public EmptyClass() { }
}

/**
 * üë• –ß–ï–õ–û–í–ï–ö
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
 */
class Person {
    private String name;
    private int age;
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω —á–µ–ª–æ–≤–µ–∫: %s (%d –ª–µ—Ç)%n", name, age);
    }
    
    public void introduce() {
        System.out.printf("üëã –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç %s, –º–Ω–µ %d –ª–µ—Ç%n", name, age);
    }
}

/**
 * üöó –ê–í–¢–û–ú–û–ë–ò–õ–¨
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –ø–æ–ª–µ–π —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
 */
class Car {
    private String brand;
    private String model;
    private int year;
    private boolean isRunning;
    
    public Car(String brand, String model, int year) {
        this.brand = brand;
        this.model = model;
        this.year = year;
        this.isRunning = false; // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–æ–±–∏–ª—å: %s %s %d –≥–æ–¥–∞%n", brand, model, year);
    }
    
    public void showInfo() {
        System.out.printf("üöó %s %s %d –≥–æ–¥–∞ (—Å–æ—Å—Ç–æ—è–Ω–∏–µ: %s)%n", 
                         brand, model, year, isRunning ? "–∑–∞–≤–µ–¥–µ–Ω–∞" : "–∑–∞–≥–ª—É—à–µ–Ω–∞");
    }
}

/**
 * üéì –°–¢–£–î–ï–ù–¢
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–≥—Ä—É–∑–∫—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤
 */
class Student {
    private String name;
    private int age;
    private String major;
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    public Student() {
        this.name = "–ù–æ–≤—ã–π —Å—Ç—É–¥–µ–Ω—Ç";
        this.age = 18;
        this.major = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ";
        System.out.println("üÜï –°–æ–∑–¥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
    }
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ç–æ–ª—å–∫–æ —Å –∏–º–µ–Ω–µ–º
    public Student(String name) {
        this.name = name;
        this.age = 18;
        this.major = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ";
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç: %s%n", name);
    }
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –∏–º–µ–Ω–µ–º –∏ –≤–æ–∑—Ä–∞—Å—Ç–æ–º
    public Student(String name, int age) {
        this.name = name;
        this.age = age;
        this.major = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ";
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç: %s (%d –ª–µ—Ç)%n", name, age);
    }
    
    // –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    public Student(String name, int age, String major) {
        this.name = name;
        this.age = age;
        this.major = major;
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç: %s (%d –ª–µ—Ç), —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: %s%n", 
                         name, age, major);
    }
    
    public void showInfo() {
        System.out.printf("üìã –°—Ç—É–¥–µ–Ω—Ç: %s, %d –ª–µ—Ç, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: %s%n", 
                         name, age, major);
    }
}

/**
 * üè¶ –ë–ê–ù–ö–û–í–°–ö–ò–ô –°–ß–ï–¢
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ü–µ–ø–æ—á–∫—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ (constructor chaining)
 */
class BankAccount {
    private String accountNumber;
    private String ownerName;
    private double balance;
    
    // –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    public BankAccount() {
        this("UNKNOWN", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü", 0.0);
        System.out.println("üÜï –°–æ–∑–¥–∞–Ω —Å—á–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
    }
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
    public BankAccount(String ownerName) {
        this(generateAccountNumber(), ownerName, 0.0);
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω —Å—á–µ—Ç –¥–ª—è %s%n", ownerName);
    }
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∏ –±–∞–ª–∞–Ω—Å–æ–º
    public BankAccount(String ownerName, double initialBalance) {
        this(generateAccountNumber(), ownerName, initialBalance);
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω —Å—á–µ—Ç –¥–ª—è %s —Å –±–∞–ª–∞–Ω—Å–æ–º %.2f%n", 
                         ownerName, initialBalance);
    }
    
    // –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤—Å–µ–º–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏
    private BankAccount(String accountNumber, String ownerName, double balance) {
        this.accountNumber = accountNumber;
        this.ownerName = ownerName;
        this.balance = balance;
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ —Å—á–µ—Ç–∞
    private static String generateAccountNumber() {
        return "ACC-" + (int)(Math.random() * 100000);
    }
    
    public void showAccountInfo() {
        System.out.printf("üí≥ –°—á–µ—Ç %s | –í–ª–∞–¥–µ–ª–µ—Ü: %s | –ë–∞–ª–∞–Ω—Å: %.2f —Ä—É–±%n", 
                         accountNumber, ownerName, balance);
    }
}

/**
 * üíª –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö
 */
class Developer {
    private String name;
    private String level; // Junior, Middle, Senior
    private String language;
    private int experienceYears;
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ç–æ–ª—å–∫–æ —Å –∏–º–µ–Ω–µ–º
    public Developer(String name) {
        this(name, "Junior", "Java");
    }
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å —É—Ä–æ–≤–Ω–µ–º –∏ —è–∑—ã–∫–æ–º
    public Developer(String name, String level, String language) {
        this.name = validateName(name);
        this.level = validateLevel(level);
        this.language = validateLanguage(language);
        this.experienceYears = calculateExperience(level);
        
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: %s (%s %s —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫)%n", 
                         name, level, language);
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
    private String validateName(String name) {
        if (name == null || name.trim().isEmpty()) {
            return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫";
        }
        return name.trim();
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —É—Ä–æ–≤–Ω—è
    private String validateLevel(String level) {
        return switch (level.toLowerCase()) {
            case "junior", "middle", "senior" -> 
                level.substring(0, 1).toUpperCase() + level.substring(1).toLowerCase();
            default -> "Junior";
        };
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
    private String validateLanguage(String language) {
        if (language == null || language.trim().isEmpty()) {
            return "Java";
        }
        return language;
    }
    
    // –†–∞—Å—á–µ—Ç –æ–ø—ã—Ç–∞ –ø–æ —É—Ä–æ–≤–Ω—é
    private int calculateExperience(String level) {
        return switch (level.toLowerCase()) {
            case "junior" -> (int)(Math.random() * 2) + 1; // 1-2 –≥–æ–¥–∞
            case "middle" -> (int)(Math.random() * 3) + 3; // 3-5 –ª–µ—Ç
            case "senior" -> (int)(Math.random() * 5) + 6; // 6-10 –ª–µ—Ç
            default -> 1;
        };
    }
    
    public void introduce() {
        System.out.printf("üë®‚Äçüíª %s - %s %s —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ (–æ–ø—ã—Ç: %d –ª–µ—Ç)%n", 
                         name, level, language, experienceYears);
    }
}

/**
 * üéÆ –ò–ì–†–ê
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–ª–æ–∂–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
 */
class Game {
    private String title;
    private int maxPlayers;
    private int timeLimit; // –≤ –º–∏–Ω—É—Ç–∞—Ö
    private boolean isActive;
    private int currentPlayers;
    
    public Game(String title, int maxPlayers, int timeLimit) {
        this.title = title;
        this.maxPlayers = maxPlayers;
        this.timeLimit = timeLimit;
        this.isActive = false;
        this.currentPlayers = 0;
        
        System.out.printf("üÜï –°–æ–∑–¥–∞–Ω–∞ –∏–≥—Ä–∞: \"%s\"(–º–∞–∫—Å. –∏–≥—Ä–æ–∫–æ–≤: %d, –≤—Ä–µ–º—è: %d –º–∏–Ω)%n", 
                         title, maxPlayers, timeLimit);
    }
    
    public void showGameInfo() {
        System.out.printf("üéÆ –ò–≥—Ä–∞: \"%s\"| –ò–≥—Ä–æ–∫–æ–≤: %d/%d | –í—Ä–µ–º—è: %d –º–∏–Ω | –°—Ç–∞—Ç—É—Å: %s%n", 
                         title, currentPlayers, maxPlayers, timeLimit,
                         isActive ? "–ê–∫—Ç–∏–≤–Ω–∞" : "–û–∂–∏–¥–∞–Ω–∏–µ");
    }
    
    public void startGame() {
        if (!isActive) {
            isActive = true;
            System.out.println("üöÄ –ò–≥—Ä–∞ \"" + title + "\" –Ω–∞—á–∞–ª–∞—Å—å!");
        } else {
            System.out.println("‚ö†Ô∏è –ò–≥—Ä–∞ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞");
        }
    }
}

/*
üéì –ß–¢–û –¢–´ –ò–ó–£–ß–ò–õ:

‚úÖ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ
‚úÖ –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
‚úÖ –¶–µ–ø–æ—á–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ (this())
‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö
‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–µ–π –∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ Java

üî• –ö–õ–Æ–ß–ï–í–´–ï –ö–û–ù–¶–ï–ü–¶–ò–ò:

üí° –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä = —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
üí° –ò–º—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ = –∏–º—è –∫–ª–∞—Å—Å–∞
üí° –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –Ω–µ –∏–º–µ—é—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞
üí° this() –≤—ã–∑—ã–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
üí° –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, Java —Å–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π
üí° –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –¥–∞–µ—Ç –≥–∏–±–∫–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤

üèÜ –ü–†–ò–ù–¶–ò–ü–´ –•–û–†–û–®–ò–• –ö–û–ù–°–¢–†–£–ö–¢–û–†–û–í:

- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç –í–°–ï –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞
- –í–∞–ª–∏–¥–∏—Ä—É—é—Ç –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç –ª–æ–≥–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
- –ù–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É
- –ò—Å–ø–æ–ª—å–∑—É—é—Ç —Ü–µ–ø–æ—á–∫—É –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è

üíæ –°–æ—Ö—Ä–∞–Ω–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å:
git add .
git commit -m "–£—Ä–æ–∫ 9: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã"

–ì–æ—Ç–æ–≤ –∫ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–º—É –∑–∞–Ω—è—Ç–∏—é? üéØ
*/ 